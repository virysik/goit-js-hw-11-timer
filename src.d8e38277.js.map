{"version":3,"sources":["index.js"],"names":["days","time","pad","Math","floor","hours","mins","secs","value","String","padStart","CountdownTimer","selector","targetDate","_intervalId","trgtDate","getTime","timerWrapper","document","querySelector","daysEl","daysText","nextElementSibling","hoursEl","hoursText","minsEl","minsText","secsEl","secsText","setInterval","currentTime","Date","now","deltaTime","textContent","clearInterval","timer","start"],"mappings":";;;;;AA0DA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA1DA,QAAA,oBAEA,IAAMA,EAAM,SAACC,GAAQC,OAAAA,EAAIC,KAAKC,MAAMH,EAAQ,SACtCI,EAAO,SAACJ,GAAQC,OAAAA,EAAIC,KAAKC,MAAOH,EAAQ,MAAyB,QACjEK,EAAM,SAACL,GAAQC,OAAAA,EAAIC,KAAKC,MAAOH,EAAQ,KAAoB,OAC3DM,EAAM,SAACN,GAAQC,OAAAA,EAAIC,KAAKC,MAAOH,EAAQ,IAAc,OAE3D,SAASC,EAAIM,GACFC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAG/BC,IAAAA,EAAAA,WAEoC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GACjCD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,YAAc,KA0CvB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAvCI,MAAA,WACUC,IAAAA,EAAW,KAAKF,WAAWG,UAC3BC,EAAeC,SAASC,cAAc,KAAKP,UAC7CQ,EAASH,EAAaE,cAAc,uBACpCE,EAAWD,EAAOE,mBAClBC,EAAUN,EAAaE,cAAc,wBACrCK,EAAYD,EAAQD,mBACpBG,EAASR,EAAaE,cAAc,uBACpCO,EAAWD,EAAOH,mBAClBK,EAASV,EAAaE,cAAc,uBACpCS,EAAWD,EAAOL,mBAGjBR,KAAAA,YAAce,YAAY,WACrBC,IAAAA,EAAcC,KAAKC,MACnBC,EAAYlB,EAAWe,EAC7BV,EAAOc,YAAclC,EAAKiC,GAC1BV,EAAQW,YAAc7B,EAAM4B,GAC5BR,EAAOS,YAAc5B,EAAK2B,GAC1BN,EAAOO,YAAc3B,EAAK0B,GAC1BZ,EAASa,YAAqC,OAAvBd,EAAOc,YAAuB,MAAQ,OAC7DV,EAAUU,YAAsC,OAAxBX,EAAQW,YAAuB,OAAS,QAChER,EAASQ,YAAqC,OAAvBT,EAAOS,YAAuB,SAAW,UAChEN,EAASM,YAAqC,OAAvBP,EAAOO,YAAuB,SAAW,WACjE,OAeX,CAAA,IAAA,OAXI,MAAA,WACIC,cAAc,KAAKrB,iBAU3B,EA/CMH,GAyCAyB,EAAQ,IAAIzB,EAAe,CAC/BC,SAAU,WACVC,WAAY,IAAIkB,KAAK,kBAGvBK,EAAMC","file":"src.d8e38277.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst days =(time)=> pad(Math.floor(time / (1000 * 60 * 60 * 24)));\nconst hours =(time)=> pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\nconst mins =(time)=> pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\nconst secs =(time)=> pad(Math.floor((time % (1000 * 60)) / 1000));\n\nfunction pad(value) {\n    return String(value).padStart(2, '0');\n}\n\nclass CountdownTimer {\n\n    constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this._intervalId = null;\n    }\n\n    start() {\n        const trgtDate = this.targetDate.getTime();\n        const timerWrapper = document.querySelector(this.selector);\n        let daysEl = timerWrapper.querySelector('[data-value=\"days\"]');\n        let daysText = daysEl.nextElementSibling;\n        let hoursEl = timerWrapper.querySelector('[data-value=\"hours\"]');\n        let hoursText = hoursEl.nextElementSibling;\n        let minsEl = timerWrapper.querySelector('[data-value=\"mins\"]');\n        let minsText = minsEl.nextElementSibling;\n        let secsEl = timerWrapper.querySelector('[data-value=\"secs\"]');\n        let secsText = secsEl.nextElementSibling;\n\n        \n        this._intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = trgtDate - currentTime;\n            daysEl.textContent = days(deltaTime);\n            hoursEl.textContent = hours(deltaTime);\n            minsEl.textContent = mins(deltaTime);\n            secsEl.textContent = secs(deltaTime);\n            daysText.textContent = daysEl.textContent === '01' ? \"DAY\" : \"DAYS\";\n            hoursText.textContent = hoursEl.textContent === '01' ? \"HOUR\" : \"HOURS\";\n            minsText.textContent = minsEl.textContent === '01' ? \"MINUTE\" : \"MINUTES\";\n            secsText.textContent = secsEl.textContent === '01' ? \"SECOND\" : \"SECONDS\";\n        }, 1000);\n        \n    }\n\n    stop() {\n        clearInterval(this._intervalId);\n    }\n};\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('May 15, 2021'),\n})\n\ntimer.start();\n//timer.stop();\n"]}